@startuml Entity Relationship Diagram - MinIG
!define Table(x) class x << (T,#FFAAAA) >>
!define PrimaryKey(x, type) <b><u>x</u></b> : <i>type</i>
!define ForeignKey(x, type) <u>x</u> : <i>type</i>
!define OneToMany(x) "1" --{ "0..*" x
!define ManyToOneDirected(x, direction) "0..*" }-direction- "1" x
!define OneToManyDirected(x, direction) "1" -direction-{ "0..*" x
!define CompositionOneToMany(x) "1" *-- "0..*" x
!define CompositionOneToManyDirected(x, direction) "1" *-direction- "0..*" x

Table(User) {
  .. PrimaryKey ..
  + PrimaryKey(id, string)
  .. Attributes ..
  + fullName : string
  # username : string
  # email : string
  + emailCheck : boolean
  + password : string
  + biography : string
  + profilePicture : string
  .. Relationships ..
  + images : Image[]
  + posts : Post[]
  + comments : Comment[]
  + postReactions : PostReaction[]
  + commentReactions : CommentReaction[]
}

Table(Image) {
  .. PrimaryKey ..
  + PrimaryKey(id, string)
  .. Attributes ..
  + path : string
  .. Relationships ..
  + posts : Post[]
  .. ForeignKeys ..
  ForeignKey(user_id, string)
}

Table(Post) {
  .. PrimaryKey ..
  + PrimaryKey(id, string)
  .. Attributes ..
  + subtitle : string
  .. Relationships ..
  + comments: Comment[]
  + reactions: PostReaction[]
  .. ForeignKeys ..
  ForeignKey(user_id, string)
  ForeignKey(image_id, string)
}

Table(Comment) {
  .. PrimaryKey ..
  + PrimaryKey(id, string)
  .. Attributes .. ..
  + content : string
  .. Relationships ..
  + reactions: CommentReaction[]
  .. ForeignKeys ..
  ForeignKey(user_id, string)
  ForeignKey(post_id, string)
}

Table(PostReaction) {
  .. PrimaryKey ..
  + PrimaryKey(id, string)
  .. Attributes ..
  + type : enum[like, deslike]
  .. ForeignKeys ..
  ForeignKey(user_id, string)
  ForeignKey(post_id, string)
}

Table(CommentReaction) {
  .. PrimaryKey ..
  + PrimaryKey(id, string)
  .. Attributes ..
  + type : enum[like, deslike]
  .. ForeignKeys ..
  ForeignKey(user_id, string)
  ForeignKey(comment_id, string)
}

User CompositionOneToManyDirected(Image, right) : can upload >
User CompositionOneToMany(Comment) : can have >
User CompositionOneToMany(PostReaction) : can have >
User CompositionOneToMany(CommentReaction) : can have >
User CompositionOneToMany(Post) : can have >

Post ManyToOneDirected(Image, up) : have one >
Post CompositionOneToMany(Comment) : can have >
Post CompositionOneToManyDirected(PostReaction, left) : can have >

Comment CompositionOneToManyDirected(CommentReaction, up) : can have >

@enduml